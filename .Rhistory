degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab="Major")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab = "")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab = "")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2, cex.axis=0.75)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab = "")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2, cex.axis=0.35)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab = "")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2, cex.axis=0.5)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab = "", asp =1)
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2, cex.axis=0.5)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab = "")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2, cex.axis=0.5)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
par(mar=c(5,6,4,2))
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab = "")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2, cex.axis=0.5)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
par(mar=c(5,5,5,5))
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab = "")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2, cex.axis=0.5)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
par(mar=c(5,10,5,5))
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab = "")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2, cex.axis=0.5)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
par(mar=c(5,10,5,10))
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab = "")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2, cex.axis=0.5)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
par(mar=c(5,10,10,10))
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab = "")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2, cex.axis=0.5)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
par(mar=c(5,10,1,10))
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab = "")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2, cex.axis=0.5)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
par(mar=c(5,10,1,2))
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab = "")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2, cex.axis=0.5)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
par(mar=c(1,10,1,2))
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab = "")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2, cex.axis=0.5)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
par(mar=c(20,10,1,2))
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab = "")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2, cex.axis=0.5)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
par(mar=c(10,10,1,2))
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab = "")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2, cex.axis=0.5)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
par(mar=c(10,10,1,2))
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab = "")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2, cex.axis=1)
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
par(mar=c(10,10,1,2))
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab = "")
axis(1, at=1:25, labels=levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)], las = 2, cex.axis=0.9)
degree_by_major$Major
as.character(degree_by_major$Major)
pattern <- "a.b"
strings <- c("ABB", "aaB", "aab")
str_detect(strings, pattern)
str_detect(strings, ignore.case(pattern))
pattern <- "a.b"
strings <- c("ABB", "aaB", "aab")
str_detect(strings, pattern, ignore.case = TRUE)
str_detect('TOYOTA subaru', regex('toyota', ignore_case = T))
str_detect('TOYOTa subaru', regex('toyota', ignore_case = T))
str_detect('TOYOTA subaru', regex('toyota science', ignore_case = T))
KEYWORDS
knitr::opts_chunk$set(echo = FALSE, cache=TRUE, message=FALSE, warning=FALSE)
# Load packages
library(rvest)
library(stringr)
library(dplyr)
library(ggplot2)
# Indeed Search Words
# job_title <- "\"Data+Scientist\""
# location <- "Chicago%2C+IL"
location <- "Nationwide"
BASE_URL <- "https://www.indeed.com"
ADV_URL <- paste0('https://www.indeed.com/jobs?as_and=PhD&as_not=&as_cmp=&jt=all&st=&salary=&sr=directhire&radius=25&fromage=any&limit=50&sort=date&psf=advsrch&as_any=&as_phr=&l=', location)
# get the html file from search url
start_page <- read_html(ADV_URL)
# Get start page job URLs
links <- start_page %>%
html_nodes("h2 a") %>%
html_attr('href')
# Get result page links
page.links <- start_page %>%
html_nodes(xpath = '//div[contains(@class,"pagination")]//a') %>%
html_attr('href')
KEYWORDS <- as.character(degree_by_major$Major)
# Clean the raw html - removing commas, tabs, line changers, etc
clean.text <- function(text)
{
str_replace_all(text, regex('\r\n|\n|\t|\r|,|/|<|>|\\.'), ' ')
}
# Given running total dataframe and links to scrape skills and compute running total
ScrapeJobLinks <- function(res, job.links){
for(i in 1:length(job.links)){
job.url <- paste0(BASE_URL,job.links[i])
# Sys.sleep(1)
# cat(paste0('Reading job ', i, '\n'))
tryCatch({
html <- read_html(job.url)
text <- html_text(html)
text <- clean.text(text)
df <- data.frame(skill = KEYWORDS, count = ifelse(str_detect(text, regex(KEYWORDS, ignore_case = T)), 1, 0))
res$running$count <- res$running$count + df$count
res$num_jobs <- res$num_jobs + 1
}, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
# cat(paste0('job.links\n'))
}
return(res)
}
# For display purpose, we also need the \\b removed from the keyword set
KEYWORDS_DISPLAY <- KEYWORDS
# Create running total dataframe
running <- data.frame(skill = KEYWORDS_DISPLAY, count = rep(0, length(KEYWORDS_DISPLAY)))
# Since the indeed only display max of 20 pages from search result, we cannot use job_count but need to track by creating a num_jobs
num_jobs <- 0
# Here is our results object that contains the two stats
results <- list("running" = running, "num_jobs" = num_jobs)
job_count = 1
if(job_count != 0){
cat('Scraping jobs in Start Page\n')
results <- ScrapeJobLinks(results, links)
}
for(p in 1:(length(page.links)-1)){
#for(p in 1:2){
cat('Moving to Next 50 jobs\n')
# Navigate to next page
new.page <- read_html(paste0(BASE_URL, page.links[p]))
# Get new page job URLs
links <- new.page %>%
html_nodes("h2 a") %>%
html_attr('href')
# Scrap job links
results <- ScrapeJobLinks(results, links)
}
print(arrange(results$running, -count))
str_detect('industrial engineering', regex('Industrial engineering', ignore_case = T))
str_detect('industrial', regex('Industrial engineering', ignore_case = T))
str_detect('industrial ad ad asd ', regex('Industrial engineering', ignore_case = T))
ADV_URL
head(results)
names.results$running
names(results$running)
names(results$running)[1]
names(results$running)[1] = major
names(results$running)[1] = "major"
names(results$running)[1]
head(degree_by_major)
gap = merge(results$running, degree_by_major, by = major)
gap = merge(results$running, degree_by_major, by = Major)
gap = merge(results$running, degree_by_major, by = "Major")
names(results$running)[1] = "Major"
gap = merge(results$running, degree_by_major, by = "Major")
head(gap)
plot(gap$count, gap$Gen_Diff)
names(results$running)[1] = "Major"
gap = merge(results$running, degree_by_major, by = "Major")
plot(gap$count, gap$Gen_Diff, xlim = c(0,200))
levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)
)
levels(degree_by_major$Major)[order(degree_by_major$Gen_Diff)]
order(degree_by_major$Gen_Diff)
degree_by_major$Gen_Diff
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
par(mar=c(10,10,1,2))
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab = "")
axis(1, at=1:25, labels=degree_by_major$Major, las = 2, cex.axis=0.9)
knitr::opts_chunk$set(echo = TRUE)
jt <- str_replace_all(job_title, '\\+|\\\"', ' ')
loc <- str_replace_all(location, '\\%2C+|\\+',' ')
# Visualization
p <- ggplot(results$running, aes(reorder(skill,-count), count)) + geom_bar(stat="identity") +
labs(x = 'Skill', y = 'Occurrences (%)', title = paste0('Skill occurrences(%) for ', jt, ' in ', loc))
p + scale_y_continuous(labels = scales::percent, breaks = seq(0,1,0.1))
# running total count as percentage
results$running$count<-results$running$count/results$num_jobs
# Reformat the Job Title and Location to readable form
jt <- str_replace_all(job_title, '\\+|\\\"', ' ')
loc <- str_replace_all(location, '\\%2C+|\\+',' ')
# Visualization
p <- ggplot(results$running, aes(reorder(Major,-count), count)) + geom_bar(stat="identity") +
labs(x = 'Skill', y = 'Occurrences (%)', title = paste0('Skill occurrences(%) for ', jt, ' in ', loc))
p + scale_y_continuous(labels = scales::percent, breaks = seq(0,1,0.1))
# running total count as percentage
results$running$count<-results$running$count/results$num_jobs
# Reformat the Job Title and Location to readable form
jt <- str_replace_all(job_title, '\\+|\\\"', ' ')
loc <- str_replace_all(location, '\\%2C+|\\+',' ')
# Visualization
p <- ggplot(results$running, aes(reorder(Major,-count), count)) + geom_bar(stat="identity") +
labs(x = 'Major', y = 'Occurrences (%)', title = paste0('Skill occurrences(%) for ', jt, ' in ', loc))
p + scale_y_continuous(labels = scales::percent, breaks = seq(0,1,0.1))
# running total count as percentage
results$running$count<-results$running$count/results$num_jobs
# Reformat the Job Title and Location to readable form
jt <- str_replace_all(job_title, '\\+|\\\"', ' ')
loc <- str_replace_all(location, '\\%2C+|\\+',' ')
# Visualization
p <- ggplot(results$running, aes(reorder(Major,-count), count)) + geom_bar(stat="identity") +
labs(x = 'Major', y = 'Occurrences (%)', title = "Major occurrences(%) in PhD Job Postings on indeed.com") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p + scale_y_continuous(labels = scales::percent, breaks = seq(0,1,0.1))
library("xlsx")
degree_by_major <- read.xlsx("tb2.xlsx",3)
degree_by_major = degree_by_major[order(degree_by_major$Gen_Diff),]
par(mar=c(10,10,1,2))
plot(degree_by_major$Gen_Diff,type="p",   xaxt="n", ylab="Difference of numbers", xlab = "")
axis(1, at=1:22, labels=degree_by_major$Major, las = 2, cex.axis=0.9)
# running total count as percentage
results$running$count<-results$running$count/results$num_jobs
# Reformat the Job Title and Location to readable form
# jt <- str_replace_all(job_title, '\\+|\\\"', ' ')
# loc <- str_replace_all(location, '\\%2C+|\\+',' ')
# Visualization
p <- ggplot(results$running, aes(reorder(Major,-count), count)) + geom_bar(stat="identity") +
labs(x = 'Major', y = 'Occurrences (%)', title = "Major occurrences(%) in PhD Job Postings on indeed.com") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p + scale_y_continuous(labels = scales::percent, breaks = seq(0,1,0.1))
install.packages("xlsx")
install.packages("rvest")
knitr::opts_chunk$set(echo = FALSE, cache=TRUE, message=FALSE, warning=FALSE)
# Load packages
library(rvest)
library(stringr)
library(dplyr)
library(ggplot2)
# Indeed Search Words
# job_title <- "\"Data+Scientist\""
# location <- "Chicago%2C+IL"
location <- "Nationwide"
BASE_URL <- "https://www.indeed.com"
ADV_URL <- paste0('https://www.indeed.com/jobs?as_and=PhD&as_not=&as_cmp=&jt=all&st=&salary=&sr=directhire&radius=25&fromage=any&limit=50&sort=date&psf=advsrch&as_any=&as_phr=&l=', location)
# get the html file from search url
start_page <- read_html(ADV_URL)
# Get start page job URLs
links <- start_page %>%
html_nodes("h2 a") %>%
html_attr('href')
# Get result page links
page.links <- start_page %>%
html_nodes(xpath = '//div[contains(@class,"pagination")]//a') %>%
html_attr('href')
KEYWORDS <- as.character(degree_by_major$Major)
# Clean the raw html - removing commas, tabs, line changers, etc
clean.text <- function(text)
{
str_replace_all(text, regex('\r\n|\n|\t|\r|,|/|<|>|\\.'), ' ')
}
# Given running total dataframe and links to scrape skills and compute running total
ScrapeJobLinks <- function(res, job.links){
for(i in 1:length(job.links)){
job.url <- paste0(BASE_URL,job.links[i])
# Sys.sleep(1)
# cat(paste0('Reading job ', i, '\n'))
tryCatch({
html <- read_html(job.url)
text <- html_text(html)
text <- clean.text(text)
df <- data.frame(skill = KEYWORDS, count = ifelse(str_detect(text, regex(KEYWORDS, ignore_case = T)), 1, 0))
res$running$count <- res$running$count + df$count
res$num_jobs <- res$num_jobs + 1
}, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
# cat(paste0('job.links\n'))
}
return(res)
}
# For display purpose, we also need the \\b removed from the keyword set
KEYWORDS_DISPLAY <- KEYWORDS
# Create running total dataframe
running <- data.frame(skill = KEYWORDS_DISPLAY, count = rep(0, length(KEYWORDS_DISPLAY)))
# Since the indeed only display max of 20 pages from search result, we cannot use job_count but need to track by creating a num_jobs
num_jobs <- 0
# Here is our results object that contains the two stats
results <- list("running" = running, "num_jobs" = num_jobs)
job_count = 1
if(job_count != 0){
# cat('Scraping jobs in Start Page\n')
results <- ScrapeJobLinks(results, links)
}
for(p in 1:(length(page.links)-1)){
#for(p in 1:2){
# cat('Moving to Next 50 jobs\n')
# Navigate to next page
new.page <- read_html(paste0(BASE_URL, page.links[p]))
# Get new page job URLs
links <- new.page %>%
html_nodes("h2 a") %>%
html_attr('href')
# Scrap job links
results <- ScrapeJobLinks(results, links)
}
install.packages("googleVis")
install.packages("maps")
knitr::opts_chunk$set(echo = FALSE, cache=TRUE, message=FALSE, warning=FALSE)
ts = read.table(file = 'gender_degree_data.tsv', sep = '\t', header = TRUE)
View(ts)
library("ggplot2")
ts = read.table(file = 'gender_degree_data.tsv', sep = '\t', header = TRUE)
require(graphics)
ts.plot(ldeaths, mdeaths, fdeaths,
gpars=list(xlab="year", ylab="deaths", lty=c(1:3)))
library("ggplot2")
ts = read.table(file = 'gender_degree_data.tsv', sep = '\t', header = TRUE)
require(graphics)
ts.plot(ldeaths, mdeaths, fdeaths,
gpars=list(xlab="year", ylab="deaths", lty=c(1:3)))
require(graphics)
ts.plot(ldeaths, mdeaths, fdeaths,
gpars=list(xlab="year", ylab="deaths", lty=c(1:3)))
View(p)
library(xlsx)
write.xlsx(ts, "C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx")
library("ggplot2")
library(xlsx)
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
View(table)
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",3)
plot(table, plot.type="single", col = 1:ncol(table))
legend("bottomleft", colnames(table), col=1:ncol(table), lty=1, cex=.65)
matplot(table[,-1], col=1:ncol(table), type='l', lty=1, ylim=range(table), axes=FALSE)
axis(1, 1:nrow(table), as.character(table[,1]))
axis(2)
box() #- to make it look "as usual"
legend('topright', names(table), col=1:ncol(table), lty=1, cex=.65)
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",3)
matplot(table[,-1], col=1:ncol(table), type='l', lty=1, ylim=c(0,1), axes=FALSE)
axis(1, 1:nrow(table), as.character(table[,1]))
axis(2)
box() #- to make it look "as usual"
legend('topright', names(table), col=1:ncol(table), lty=1, cex=.65)
ggplot(table, aes(x = year, y = steps, colour = userId)) + geom_line()
ggplot(table, aes(x = year)) + geom_line()
ggplot(table, aes(x = year,y=table[2:4]) + geom_line()
ggplot(table, aes(x = year,y=table[,2:4]) + geom_line()
ggplot(table, aes(x = year,y=table[1,2:4]) + geom_line()
ggplot(table, aes(x = year,y=table[1,2:4]) + geom_line())
ggplot(table, aes(x = year,y=table[,2:4]) + geom_line())
table[1,2:4]
colnames(table)
colnames(table)[2:4]
ggplot(table, aes(x = year,y=colnames(table)[2:4]) + geom_line())
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
ggplot(table, aes(x = year, y = percentage, colour = Degree_Major)) + geom_line()
ggplot(table, aes(x = Year, y = percentage, colour = Degree_Major)) + geom_line()
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_line()
library("ggplot2")
library(xlsx)
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_line()
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_line()
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_line()
library("ggplot2")
library(xlsx)
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_line()
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_line() + theme(legend.text=element_text(size=10))
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_line() + theme(legend.text=element_text(size=4))
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_line()
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + theme(legend.key.size = unit(2, "cm"))
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + theme(legend.key.size = unit(1, "cm"))
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + theme(legend.key.size = unit(10, "cm"))
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + theme(legend.key.size = unit(0.1, "cm"))
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major))
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major))
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major))
View(table)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_line()
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_line()+ theme_bw(base_size=10)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_line()+ theme_bw(base_size=5)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_line()+ theme_bw(base_size=8)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_line()+ theme_bw(base_size=8) +
geom_smooth(method = 'lm', se = FALSE)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_line()+ theme_bw(base_size=8) +
geom_smooth(method = 'loess', se = FALSE)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_point()+ theme_bw(base_size=8) +
geom_smooth(method = 'loess', se = FALSE)
library("ggplot2")
library(xlsx)
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_point()+ theme_bw(base_size=8) +
geom_smooth(method = 'loess', se = FALSE) + ggtitle("Petal and sepal length of iris")
library("ggplot2")
library(xlsx)
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_point()+ theme_bw(base_size=8) +
geom_smooth(method = 'loess', se = FALSE) + ggtitle("Figure 1 Trend of PhD's degrees conferred to women by programs in the US (1997-2016)")
library("ggplot2")
library(xlsx)
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_point()+ theme_bw(base_size=8) +
geom_smooth(method = 'loess', se = FALSE) + ggtitle("Figure 1 Trend of PhD's degrees conferred to women by programs in the US (1997-2016)")+ theme(plot.title = element_text(size=22))
library("ggplot2")
library(xlsx)
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_point()+ theme_bw(base_size=8) +
geom_smooth(method = 'loess', se = FALSE) + ggtitle("Figure 1. Percentage of PhD's degrees conferred to women by programs in the US (1997-2016)")+ theme(plot.title = element_text(size=15))
library("ggplot2")
library(xlsx)
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_point()+ theme_bw(base_size=8) +
geom_smooth(method = 'loess', se = FALSE) + ggtitle("Figure 1. Percentage of PhD's degrees conferred to\ women by programs in the US (1997-2016)")+ theme(plot.title = element_text(size=15))
library("ggplot2")
library(xlsx)
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_point()+ theme_bw(base_size=8) +
geom_smooth(method = 'loess', se = FALSE) + ggtitle("Figure 1. Percentage of PhD's degrees conferred to\n women by programs in the US (1997-2016)")+ theme(plot.title = element_text(size=15))
library("ggplot2")
library(xlsx)
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_point(size=3)+ theme_bw(base_size=8) +
geom_smooth(method = 'loess', se = FALSE) + ggtitle("Figure 1. Percentage of PhD's degrees conferred to\n women by programs in the US (1997-2016)")+ theme(plot.title = element_text(size=15))
library("ggplot2")
library(xlsx)
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_point(size=0.5)+ theme_bw(base_size=8) +
geom_smooth(method = 'loess', se = FALSE) + ggtitle("Figure 1. Percentage of PhD's degrees conferred to\n women by programs in the US (1997-2016)")+ theme(plot.title = element_text(size=15))
library("ggplot2")
library(xlsx)
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_point(size=0.8)+ theme_bw(base_size=8) +
geom_smooth(method = 'loess', se = FALSE) + ggtitle("Figure 1. Percentage of PhD's degrees conferred to\n women by programs in the US (1997-2016)")+ theme(plot.title = element_text(size=15))
library("ggplot2")
library(xlsx)
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_point(size=0.8)+
geom_smooth(method = 'loess', se = FALSE) + ggtitle("Figure 1. Percentage of PhD's degrees conferred to\n women by programs in the US (1997-2016)")+ theme(plot.title = element_text(size=15))
library("ggplot2")
library(xlsx)
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_point(size=1)+
geom_smooth(method = 'loess', se = FALSE) + ggtitle("Figure 1. Percentage of PhD's degrees conferred to\n women by programs in the US (1997-2016)")+ theme(plot.title = element_text(size=15))
library("ggplot2")
library(xlsx)
table = read.xlsx("C:/Users/Xu Dong/Desktop/Jobs/The data Incubator/2018 Spring Session/Finalist/PhD_Gender_Gaps/raw.xlsx",2)
ggplot(table, aes(x = Year, y = Percentage, colour = Degree_Major)) + geom_point(size=0.9)+
geom_smooth(method = 'loess', se = FALSE) + ggtitle("Figure 1. Percentage of PhD's degrees conferred to\n women by programs in the US (1997-2016)")+ theme(plot.title = element_text(size=15))
knitr::opts_chunk$set(echo = FALSE, cache=TRUE, message=FALSE, warning=FALSE)
